name: CI

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
  release:
    types: [published]

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-pydeps-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev-requirements.txt') }}

    - name: Install requirements
      run: |
        pip install --upgrade pip setuptools wheel
        pip install --upgrade --upgrade-strategy eager -r requirements.txt
        pip install --upgrade --upgrade-strategy eager -r dev-requirements.txt

    - name: Show pip freeze
      run: |
        pip freeze

    - name: Check setup.py
      if: always()
      run: |
        python setup.py check

    - name: Format
      if: always()
      run: |
        black --check .

    - name: Lint
      if: always()
      run: |
        flake8

    - name: Type check
      if: always()
      run: |
        mypy allennlp_semparse tests --ignore-missing-imports --no-strict-optional --no-site-packages

    - name: Run tests
      if: always()
      run: |
        pytest -v --color=yes --cov=allennlp_semparse/ --cov-report=xml

    - name: Upload coverage to Codecov
      if: github.repository == 'allenai/allennlp-semparse'
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        # Ignore codecov failures as the codecov server is not
        # very reliable but we don't want to report a failure
        # in the github UI just because the coverage report failed to
        # be published.
        fail_ci_if_error: false

  build_package:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-pydeps-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev-requirements.txt') }}

    - name: Install requirements
      run: |
        pip install --upgrade pip setuptools wheel
        pip install --upgrade --upgrade-strategy eager -r requirements.txt
        pip install --upgrade --upgrade-strategy eager -r dev-requirements.txt

    - name: Check version and release tag match
      if: github.event_name == 'release'
      run: |
        # Remove 'refs/tags/' to get the actual tag from the release.
        TAG=${GITHUB_REF#refs/tags/};
        VERSION=$(scripts/get_version.py current)
        if [ "$TAG" != "$VERSION" ]; then
            echo "Bad tag or version. Tag $TAG does not match $VERSION";
            exit 1;
        fi

    - name: Build Package
      run: |
        python setup.py bdist_wheel sdist

    - name: Save package
      uses: actions/upload-artifact@v1
      with:
        name: semparse-package
        path: dist

  test_package:
    name: Test Package
    needs: [build_package]  # needs the package artifact created from 'build_package' job.
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Cleanup directory
      run: |
        # Remove the source code so that it doesn't conflict with the wheel
        # installation.
        rm -rf allennlp_semparse/

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install requirements
      run: |
        pip install --upgrade pip setuptools wheel

    - name: Download semparse package
      uses: actions/download-artifact@v1
      with:
        name: semparse-package
        path: dist

    - name: Install semparse package
      run: |
        pip install $(ls dist/*.whl)

  publish:
    name: Publish to PyPI
    if: github.event_name == 'release'
    needs: [checks, build_package, test_package]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install requirements
      run: |
        pip install --upgrade pip setuptools wheel twine

    - name: Download semparse package
      uses: actions/download-artifact@v1
      with:
        name: semparse-package
        path: dist

    - name: Upload to PyPI
      env:
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload -u allennlp -p $PYPI_PASSWORD dist/*
